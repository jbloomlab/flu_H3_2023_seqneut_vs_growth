# Protein sequences in the library. Note that this file currently has
# the full chimeric HAs used in the sequencing-based neutralization assay,
# which have non-native signal peptide and endodomain.
strain_prots: data/H3_library_constructs_protein.fasta

# Specify protein sequences to search for matches to `strain_prots` to get the
# counts of each strain (variant) at each time.
#
# The `protset` key specifies the set of proteins to look for matches in.
#
# The `trim` entry below specifies to trim the `strain_prots` to that range, and
# then look for matches that contain that trimmed strain protein in `protset`.
# This can be done to just look at a specific region (eg, ectodomain or HA1).
# Also keep in mind the strains in the libraries are engineered to have a chimeric
# signal peptide and endodomain so you probably do not want to require a match to
# that. The trimming is done to indicated range (1, 2, ... numbering, inclusive).
# 
# The `maxdiff` parameter specifies how many differences a protein in `protset`
# can have from the strain. A protein in a `protset` is a match if it
# has <= this many differences to the strain. We take the best match(es) for
# each protein, and if it matches multiple strains they are each
# assigned a fractional count. A differences is any of a single amino-acid
# substitution, insertion, or deletion.
protsets:
  gisaid-ha1-within1:
    protset: data/gisaid_flu_h3_prots.fa
    trim: [20, 348]
    maxdiff: 1
  gisaid-ha1-exact:
    protset: data/gisaid_flu_h3_prots.fa
    trim: [20, 348]
    maxdiff: 0
  gisaid-ectodomain-within1:
    protset: data/gisaid_flu_h3_prots.fa
    trim: [20, 533]
    maxdiff: 1

# Specify details for MLR fits with evofr. For each fit, specify:
#  `date_start`: first date of sequences to keep
#  `date_end`: last date of sequences to keep
#  `min_counts`: only keep library strains with at least this many sequences
#  `keep_not_in_library`: do we keep the set of strains not in library as a group
#      to be fit in MLR, or just drop these?
#  `keep_insufficient_counts`: do we keep the set of strains in the library with
#      insufficient counts as a group to be fit in MLR, or just drop these?
mlrfits:
  2023-mincounts80:
    date_start: 2023-01-01
    date_end: 2023-12-31
    min_counts: 80
    keep_not_in_library: false
    keep_insufficient_counts: false
  2023-mincounts80-keepother:
    date_start: 2023-01-01
    date_end: 2023-12-31
    min_counts: 80
    keep_not_in_library: true
    keep_insufficient_counts: true

# MLR settings shared among all fitting:
mlr_settings:
  # Compute fitness differences in MLR relative to this strain.
  pivot_strain: A/Massachusetts/18/2022  # vaccine strain
  # For counts chart associated with MLR, plot as rolling mean +/ this many days
  plot_window_frame_days: 14
  # Estimated serial interval for converting fitness advantages to growth rates
  mlr_tau: 3.6  # https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3057478/
  # Warmup steps for MCMC
  num_warmup: 1000
  # Sampling steps for MCMC
  num_samples: 1000
  # report this HPD interval (eg, 95 for HPD95%)
  hpd_interval: 95

# Experimentally measured titers
titers: data/H3_seqneut_titers.csv

# Parameters for growth versus titer comparison:
growth_vs_titer_params:
  nrandom: 200   # randomizations for P-value
  # when computing fraction of sera below cutoff, this number of cutoffs in this range
  corr_titer_cutoff_range: [40, 1000]
  corr_titer_cutoff_points: 100  # logarithmically spaced
  # Only keep sera that match this regex (or null to keep all sera)
  sera_regex: "^(?!.*d28$)"  # keep day 0 (not day 28) Penn Vaccine cohort samples as pre-vax more relevant
